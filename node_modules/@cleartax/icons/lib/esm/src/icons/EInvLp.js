import { __rest } from "tslib";
import * as React from "react";
import { forwardRef } from "react";
const SvgEInvLp = (_a, ref) => {
    var { title, titleId } = _a, props = __rest(_a, ["title", "titleId"]);
    return (React.createElement("svg", Object.assign({ width: "1em", height: "1em", viewBox: "0 0 57 57", fill: "none", xmlns: "http://www.w3.org/2000/svg", focusable: true, ref: ref, "aria-labelledby": titleId }, props),
        title ? React.createElement("title", { id: titleId }, title) : null,
        React.createElement("g", { clipPath: "url(#e-inv-lp_svg__a)" },
            React.createElement("g", { filter: "url(#e-inv-lp_svg__b)" },
                React.createElement("ellipse", { cx: 28.532, cy: 46.865, rx: 14.641, ry: 5.029, fill: "#3B63E5", fillOpacity: 0.4 })),
            React.createElement("rect", { x: 21.695, y: 6.742, width: 26.6, height: 34.2, rx: 4.918, transform: "rotate(10.89 21.695 6.742)", fill: "url(#e-inv-lp_svg__c)" }),
            React.createElement("mask", { id: "e-inv-lp_svg__e", style: {
                    maskType: "alpha",
                }, maskUnits: "userSpaceOnUse", x: 16, y: 7, width: 31, height: 38 },
                React.createElement("rect", { x: 21.688, y: 6.742, width: 26.6, height: 34.2, rx: 4.918, transform: "rotate(10.89 21.688 6.742)", fill: "url(#e-inv-lp_svg__d)" })),
            React.createElement("g", { filter: "url(#e-inv-lp_svg__f)", mask: "url(#e-inv-lp_svg__e)" },
                React.createElement("rect", { x: 11.43, y: 14.117, width: 27.271, height: 33.753, rx: 4.918, fill: "#1B38A8", fillOpacity: 0.6 })),
            React.createElement("g", { filter: "url(#e-inv-lp_svg__g)" },
                React.createElement("rect", { x: 10.984, y: 14.117, width: 27.271, height: 33.753, rx: 4.918, fill: "url(#e-inv-lp_svg__h)", fillOpacity: 0.3 })),
            React.createElement("g", { filter: "url(#e-inv-lp_svg__i)" },
                React.createElement("rect", { x: 15.234, y: 22.391, width: 18.553, height: 1.788, rx: 0.894, fill: "#fff" })),
            React.createElement("g", { filter: "url(#e-inv-lp_svg__j)" },
                React.createElement("rect", { x: 15.234, y: 27.531, width: 18.553, height: 1.788, rx: 0.894, fill: "#fff" })),
            React.createElement("g", { filter: "url(#e-inv-lp_svg__k)" },
                React.createElement("rect", { x: 15.234, y: 32.672, width: 18.553, height: 1.788, rx: 0.894, fill: "#fff" })),
            React.createElement("g", { filter: "url(#e-inv-lp_svg__l)" },
                React.createElement("rect", { x: 15.234, y: 37.813, width: 9.388, height: 1.788, rx: 0.894, fill: "#fff" }))),
        React.createElement("defs", null,
            React.createElement("filter", { id: "e-inv-lp_svg__b", x: 8.526, y: 36.471, width: 40.011, height: 20.792, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feGaussianBlur", { stdDeviation: 2.682, result: "effect1_foregroundBlur_443_232632" })),
            React.createElement("filter", { id: "e-inv-lp_svg__f", x: 9.194, y: 11.882, width: 31.744, height: 38.221, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feGaussianBlur", { stdDeviation: 1.118, result: "effect1_foregroundBlur_443_232632" })),
            React.createElement("filter", { id: "e-inv-lp_svg__g", x: 8.078, y: 11.211, width: 33.085, height: 39.562, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feGaussianBlur", { in: "BackgroundImage", stdDeviation: 1.453 }),
                React.createElement("feComposite", { in2: "SourceAlpha", operator: "in", result: "effect1_backgroundBlur_443_232632" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_backgroundBlur_443_232632", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.447 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.335 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.52 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232632" })),
            React.createElement("filter", { id: "e-inv-lp_svg__i", x: 13.893, y: 21.944, width: 21.237, height: 4.471, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.894 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.671 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_232632" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_232632", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.447 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.447 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232632" })),
            React.createElement("filter", { id: "e-inv-lp_svg__j", x: 13.893, y: 27.084, width: 21.237, height: 4.471, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.894 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.671 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_232632" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_232632", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.447 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.447 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232632" })),
            React.createElement("filter", { id: "e-inv-lp_svg__k", x: 13.893, y: 32.225, width: 21.237, height: 4.471, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.894 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.671 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_232632" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_232632", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.447 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.447 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232632" })),
            React.createElement("filter", { id: "e-inv-lp_svg__l", x: 13.893, y: 37.365, width: 12.073, height: 4.471, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.894 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.671 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_232632" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_232632", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.447 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.447 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232632" })),
            React.createElement("linearGradient", { id: "e-inv-lp_svg__c", x1: 36.001, y1: 40.942, x2: 36.001, y2: 6.742, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#3255E3" }),
                React.createElement("stop", { offset: 1, stopColor: "#6ABCF2" })),
            React.createElement("linearGradient", { id: "e-inv-lp_svg__d", x1: 35.993, y1: 40.942, x2: 35.993, y2: 6.742, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#3255E3" }),
                React.createElement("stop", { offset: 1, stopColor: "#6ABCF2" })),
            React.createElement("linearGradient", { id: "e-inv-lp_svg__h", x1: 25.651, y1: 47.87, x2: 25.651, y2: 14.117, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#3255E3" }),
                React.createElement("stop", { offset: 1, stopColor: "#6ABCF2" })),
            React.createElement("clipPath", { id: "e-inv-lp_svg__a" },
                React.createElement("path", { fill: "#fff", transform: "translate(.93 .93)", d: "M0 0h56v56H0z" })))));
};
const ForwardRef = forwardRef(SvgEInvLp);
export default ForwardRef;
