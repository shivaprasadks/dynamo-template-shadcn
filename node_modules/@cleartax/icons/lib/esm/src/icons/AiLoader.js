import { __rest } from "tslib";
import * as React from "react";
import { forwardRef } from "react";
const SvgAiLoader = (_a, ref) => {
    var { title, titleId } = _a, props = __rest(_a, ["title", "titleId"]);
    return (React.createElement("svg", Object.assign({ width: "1em", height: "1em", viewBox: "0 0 53 51", fill: "none", xmlns: "http://www.w3.org/2000/svg", focusable: true, ref: ref, "aria-labelledby": titleId }, props),
        title ? React.createElement("title", { id: titleId }, title) : null,
        React.createElement("g", { clipPath: "url(#ai-loader_svg__a)" },
            React.createElement("path", { fill: "#fff", d: "M0 0h53v51H0z" }),
            React.createElement("g", { filter: "url(#ai-loader_svg__b)" },
                React.createElement("path", { d: "M44 25.5C44 35.165 36.165 43 26.5 43S9 35.165 9 25.5 16.835 8 26.5 8 44 15.835 44 25.5Zm-33.093 0c0 8.612 6.981 15.593 15.593 15.593S42.093 34.112 42.093 25.5 35.112 10 26.5 10s-15.593 6.888-15.593 15.5Z", fill: "url(#ai-loader_svg__c)" }))),
        React.createElement("defs", null,
            React.createElement("radialGradient", { id: "ai-loader_svg__c", cx: 0, cy: 0, r: 1, gradientUnits: "userSpaceOnUse", gradientTransform: "rotate(90 .5 26) scale(17.5)" },
                React.createElement("stop", { offset: 0.5, stopColor: "#86CB3C" }),
                React.createElement("stop", { offset: 1, stopColor: "#1572ED" })),
            React.createElement("clipPath", { id: "ai-loader_svg__a" },
                React.createElement("path", { fill: "#fff", d: "M0 0h53v51H0z" })),
            React.createElement("filter", { id: "ai-loader_svg__b", x: -0.2, y: -0.2, width: 51.4, height: 51.4, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dx: -1 }),
                React.createElement("feGaussianBlur", { stdDeviation: 4.1 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.0823529 0 0 0 0 0.447059 0 0 0 0 0.929412 0 0 0 1 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_6461_8140" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dx: -1 }),
                React.createElement("feGaussianBlur", { stdDeviation: 2 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.0823529 0 0 0 0 0.447059 0 0 0 0 0.929412 0 0 0 1 0" }),
                React.createElement("feBlend", { in2: "effect1_dropShadow_6461_8140", result: "effect2_dropShadow_6461_8140" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect2_dropShadow_6461_8140", result: "shape" })))));
};
const ForwardRef = forwardRef(SvgAiLoader);
export default ForwardRef;
