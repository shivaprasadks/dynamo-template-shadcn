import { __rest } from "tslib";
import * as React from "react";
import { forwardRef } from "react";
const SvgCaptureLp = (_a, ref) => {
    var { title, titleId } = _a, props = __rest(_a, ["title", "titleId"]);
    return (React.createElement("svg", Object.assign({ width: "1em", height: "1em", viewBox: "0 0 56 56", fill: "none", xmlns: "http://www.w3.org/2000/svg", focusable: true, ref: ref, "aria-labelledby": titleId }, props),
        title ? React.createElement("title", { id: titleId }, title) : null,
        React.createElement("g", { clipPath: "url(#capture-lp_svg__a)" },
            React.createElement("g", { filter: "url(#capture-lp_svg__b)" },
                React.createElement("ellipse", { cx: 28.445, cy: 47.322, rx: 22.624, ry: 4.525, fill: "#3B63E5", fillOpacity: 0.1 })),
            React.createElement("path", { d: "M14.286 14.184a4.424 4.424 0 0 1 4.39-4.973h25.828a4.424 4.424 0 0 1 4.382 3.814l1.687 12.108a4.424 4.424 0 0 1-3.678 4.978l-25.487 4.111a4.424 4.424 0 0 1-5.095-3.819l-2.027-16.219Z", fill: "url(#capture-lp_svg__c)" }),
            React.createElement("g", { filter: "url(#capture-lp_svg__d)" },
                React.createElement("path", { d: "M10.126 19.874a4.424 4.424 0 0 1 4.384-3.827h26.705a4.424 4.424 0 0 1 4.424 4.424v17.523a4.424 4.424 0 0 1-4.784 4.41l-28.771-2.348A4.424 4.424 0 0 1 8.06 35.05l2.066-15.176Z", fill: "url(#capture-lp_svg__e)", fillOpacity: 0.3 })),
            React.createElement("mask", { id: "capture-lp_svg__f", style: {
                    maskType: "alpha",
                }, maskUnits: "userSpaceOnUse", x: 14, y: 9, width: 37, height: 26 },
                React.createElement("path", { d: "M14.286 14.184a4.424 4.424 0 0 1 4.39-4.973h25.828a4.424 4.424 0 0 1 4.382 3.814l1.687 12.108a4.424 4.424 0 0 1-3.678 4.978l-25.487 4.111a4.424 4.424 0 0 1-5.095-3.819l-2.027-16.219Z", fill: "#4170E7" })),
            React.createElement("g", { filter: "url(#capture-lp_svg__g)", mask: "url(#capture-lp_svg__f)" },
                React.createElement("path", { d: "M10.126 19.874a4.424 4.424 0 0 1 4.384-3.827h26.705a4.424 4.424 0 0 1 4.424 4.424v17.523a4.424 4.424 0 0 1-4.784 4.41l-28.771-2.348A4.424 4.424 0 0 1 8.06 35.05l2.066-15.176Z", fill: "#4170E7" })),
            React.createElement("g", { filter: "url(#capture-lp_svg__h)" },
                React.createElement("g", { filter: "url(#capture-lp_svg__i)" },
                    React.createElement("path", { d: "M19.299 27.838a5.465 5.465 0 0 1 4.84 4.33l.787 3.79-12.267-1.102.87-3.068a5.466 5.466 0 0 1 5.77-3.95Z", fill: "#fff" })),
                React.createElement("g", { filter: "url(#capture-lp_svg__j)" },
                    React.createElement("rect", { x: 17.164, y: 20.484, width: 5.495, height: 5.606, rx: 2.747, transform: "rotate(5.735 17.164 20.484)", fill: "#fff" }))),
            React.createElement("g", { filter: "url(#capture-lp_svg__k)" },
                React.createElement("path", { d: "M27.875 27.304c0-.434.362-.78.795-.76l11.852.529a.894.894 0 1 1-.1 1.784l-11.836-.793a.761.761 0 0 1-.711-.76Z", fill: "#fff" })),
            React.createElement("g", { filter: "url(#capture-lp_svg__l)" },
                React.createElement("path", { d: "M27.54 30.775c0-.353.296-.632.648-.611l7.103.422a.739.739 0 1 1-.114 1.473l-7.084-.675a.612.612 0 0 1-.554-.61Z", fill: "#fff" })),
            React.createElement("g", { filter: "url(#capture-lp_svg__m)" },
                React.createElement("ellipse", { cx: 28.445, cy: 47.322, rx: 22.624, ry: 4.525, fill: "#3B63E5", fillOpacity: 0.1 })),
            React.createElement("path", { d: "M14.286 14.184a4.424 4.424 0 0 1 4.39-4.973h25.828a4.424 4.424 0 0 1 4.382 3.814l1.687 12.108a4.424 4.424 0 0 1-3.678 4.978l-25.487 4.111a4.424 4.424 0 0 1-5.095-3.819l-2.027-16.219Z", fill: "url(#capture-lp_svg__n)" }),
            React.createElement("g", { filter: "url(#capture-lp_svg__o)" },
                React.createElement("path", { d: "M10.126 19.874a4.424 4.424 0 0 1 4.384-3.827h26.705a4.424 4.424 0 0 1 4.424 4.424v17.523a4.424 4.424 0 0 1-4.784 4.41l-28.771-2.348A4.424 4.424 0 0 1 8.06 35.05l2.066-15.176Z", fill: "url(#capture-lp_svg__p)", fillOpacity: 0.3 })),
            React.createElement("mask", { id: "capture-lp_svg__q", style: {
                    maskType: "alpha",
                }, maskUnits: "userSpaceOnUse", x: 14, y: 9, width: 37, height: 26 },
                React.createElement("path", { d: "M14.286 14.184a4.424 4.424 0 0 1 4.39-4.973h25.828a4.424 4.424 0 0 1 4.382 3.814l1.687 12.108a4.424 4.424 0 0 1-3.678 4.978l-25.487 4.111a4.424 4.424 0 0 1-5.095-3.819l-2.027-16.219Z", fill: "#4170E7" })),
            React.createElement("g", { filter: "url(#capture-lp_svg__r)", mask: "url(#capture-lp_svg__q)" },
                React.createElement("path", { d: "M10.126 19.874a4.424 4.424 0 0 1 4.384-3.827h26.705a4.424 4.424 0 0 1 4.424 4.424v17.523a4.424 4.424 0 0 1-4.784 4.41l-28.771-2.348A4.424 4.424 0 0 1 8.06 35.05l2.066-15.176Z", fill: "#4170E7" })),
            React.createElement("g", { filter: "url(#capture-lp_svg__s)" },
                React.createElement("g", { filter: "url(#capture-lp_svg__t)" },
                    React.createElement("path", { d: "M19.299 27.838a5.465 5.465 0 0 1 4.84 4.33l.787 3.79-12.267-1.102.87-3.068a5.466 5.466 0 0 1 5.77-3.95Z", fill: "#fff" })),
                React.createElement("g", { filter: "url(#capture-lp_svg__u)" },
                    React.createElement("rect", { x: 17.164, y: 20.484, width: 5.495, height: 5.606, rx: 2.747, transform: "rotate(5.735 17.164 20.484)", fill: "#fff" }))),
            React.createElement("g", { filter: "url(#capture-lp_svg__v)" },
                React.createElement("path", { d: "M27.875 27.304c0-.434.362-.78.795-.76l11.852.529a.894.894 0 1 1-.1 1.784l-11.836-.793a.761.761 0 0 1-.711-.76Z", fill: "#fff" })),
            React.createElement("g", { filter: "url(#capture-lp_svg__w)" },
                React.createElement("path", { d: "M27.54 30.775c0-.353.296-.632.648-.611l7.103.422a.739.739 0 1 1-.114 1.473l-7.084-.675a.612.612 0 0 1-.554-.61Z", fill: "#fff" }))),
        React.createElement("defs", null,
            React.createElement("filter", { id: "capture-lp_svg__b", x: 0.994, y: 37.97, width: 54.903, height: 18.7, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feGaussianBlur", { stdDeviation: 2.413, result: "effect1_foregroundBlur_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__d", x: 5.401, y: 13.432, width: 42.854, height: 31.604, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feGaussianBlur", { in: "BackgroundImage", stdDeviation: 1.307 }),
                React.createElement("feComposite", { in2: "SourceAlpha", operator: "in", result: "effect1_backgroundBlur_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_backgroundBlur_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.302 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.52 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__g", x: 5.401, y: 13.432, width: 42.854, height: 31.604, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feGaussianBlur", { in: "BackgroundImage", stdDeviation: 1.307 }),
                React.createElement("feComposite", { in2: "SourceAlpha", operator: "in", result: "effect1_backgroundBlur_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_backgroundBlur_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.302 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.52 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__h", x: 8.775, y: 16.861, width: 20.035, height: 22.981, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feGaussianBlur", { in: "BackgroundImage", stdDeviation: 1.941 }),
                React.createElement("feComposite", { in2: "SourceAlpha", operator: "in", result: "effect1_backgroundBlur_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_backgroundBlur_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.597 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.448 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.682812 0 0 0 0 0.777523 0 0 0 0 0.958333 0 0 0 1 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__i", x: 11.45, y: 27.41, width: 14.687, height: 10.562, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.804 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.603 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.402 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__j", x: 15.661, y: 20.34, width: 7.913, height: 8.023, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.804 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.603 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.402 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__k", x: 26.668, y: 26.137, width: 15.913, height: 4.734, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.804 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.603 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.402 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__l", x: 26.332, y: 29.762, width: 10.859, height: 4.312, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.804 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.603 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.402 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__m", x: 0.994, y: 37.97, width: 54.903, height: 18.7, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feGaussianBlur", { stdDeviation: 2.413, result: "effect1_foregroundBlur_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__o", x: 5.401, y: 13.432, width: 42.854, height: 31.604, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feGaussianBlur", { in: "BackgroundImage", stdDeviation: 1.307 }),
                React.createElement("feComposite", { in2: "SourceAlpha", operator: "in", result: "effect1_backgroundBlur_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_backgroundBlur_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.302 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.52 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__r", x: 5.401, y: 13.432, width: 42.854, height: 31.604, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feGaussianBlur", { in: "BackgroundImage", stdDeviation: 1.307 }),
                React.createElement("feComposite", { in2: "SourceAlpha", operator: "in", result: "effect1_backgroundBlur_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_backgroundBlur_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.302 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.52 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__s", x: 8.775, y: 16.861, width: 20.035, height: 22.981, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feGaussianBlur", { in: "BackgroundImage", stdDeviation: 1.941 }),
                React.createElement("feComposite", { in2: "SourceAlpha", operator: "in", result: "effect1_backgroundBlur_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_backgroundBlur_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.597 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.448 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.682812 0 0 0 0 0.777523 0 0 0 0 0.958333 0 0 0 1 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__t", x: 11.45, y: 27.41, width: 14.687, height: 10.562, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.804 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.603 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.402 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__u", x: 15.661, y: 20.34, width: 7.913, height: 8.023, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.804 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.603 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.402 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__v", x: 26.668, y: 26.137, width: 15.913, height: 4.734, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.804 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.603 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.402 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("filter", { id: "capture-lp_svg__w", x: 26.332, y: 29.762, width: 10.859, height: 4.312, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.804 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.603 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_233145" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_233145", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.402 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.402 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_233145" })),
            React.createElement("linearGradient", { id: "capture-lp_svg__c", x1: 34.971, y1: 31.131, x2: 34.971, y2: 9.211, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#6ABCF2" }),
                React.createElement("stop", { offset: 1, stopColor: "#3255E3" })),
            React.createElement("linearGradient", { id: "capture-lp_svg__e", x1: 29.002, y1: 37.565, x2: 29.002, y2: 16.047, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#3255E3" }),
                React.createElement("stop", { offset: 1, stopColor: "#6ABCF2" })),
            React.createElement("linearGradient", { id: "capture-lp_svg__n", x1: 34.971, y1: 31.131, x2: 34.971, y2: 9.211, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#6ABCF2" }),
                React.createElement("stop", { offset: 1, stopColor: "#3255E3" })),
            React.createElement("linearGradient", { id: "capture-lp_svg__p", x1: 29.002, y1: 37.565, x2: 29.002, y2: 16.047, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#3255E3" }),
                React.createElement("stop", { offset: 1, stopColor: "#6ABCF2" })),
            React.createElement("clipPath", { id: "capture-lp_svg__a" },
                React.createElement("path", { fill: "#fff", d: "M0 0h56v56H0z" })))));
};
const ForwardRef = forwardRef(SvgCaptureLp);
export default ForwardRef;
