import { __rest } from "tslib";
import * as React from "react";
import { forwardRef } from "react";
const SvgNoticeManagementReport = (_a, ref) => {
    var { title, titleId } = _a, props = __rest(_a, ["title", "titleId"]);
    return (React.createElement("svg", Object.assign({ width: "1em", height: "1em", viewBox: "0 0 54 54", fill: "none", xmlns: "http://www.w3.org/2000/svg", focusable: true, ref: ref, "aria-labelledby": titleId }, props),
        title ? React.createElement("title", { id: titleId }, title) : null,
        React.createElement("rect", { width: 54, height: 54, rx: 8, fill: "url(#notice-management-report_svg__a)", fillOpacity: 0.4 }),
        React.createElement("g", { filter: "url(#notice-management-report_svg__b)" },
            React.createElement("ellipse", { cx: 26.252, cy: 44.999, rx: 10.5, ry: 2.25, fill: "#3B63E5", fillOpacity: 0.3 })),
        React.createElement("rect", { x: 21.389, y: 11.175, width: 19.463, height: 25.024, rx: 3.598, transform: "rotate(10.89 21.389 11.175)", fill: "url(#notice-management-report_svg__c)" }),
        React.createElement("mask", { id: "notice-management-report_svg__e", style: {
                maskType: "alpha",
            }, maskUnits: "userSpaceOnUse", x: 17, y: 11, width: 23, height: 28 },
            React.createElement("rect", { x: 21.391, y: 11.175, width: 19.463, height: 25.024, rx: 3.598, transform: "rotate(10.89 21.39 11.175)", fill: "url(#notice-management-report_svg__d)" })),
        React.createElement("g", { filter: "url(#notice-management-report_svg__f)", mask: "url(#notice-management-report_svg__e)" },
            React.createElement("rect", { x: 13.883, y: 16.572, width: 19.953, height: 24.697, rx: 3.598, fill: "#1B38A8", fillOpacity: 0.6 })),
        React.createElement("g", { filter: "url(#notice-management-report_svg__g)" },
            React.createElement("rect", { x: 13.553, y: 16.572, width: 19.953, height: 24.697, rx: 3.598, fill: "url(#notice-management-report_svg__h)", fillOpacity: 0.3 })),
        React.createElement("g", { filter: "url(#notice-management-report_svg__i)" },
            React.createElement("rect", { x: 16.662, y: 22.624, width: 13.575, height: 1.308, rx: 0.654, fill: "#fff" })),
        React.createElement("g", { filter: "url(#notice-management-report_svg__j)" },
            React.createElement("rect", { x: 16.662, y: 26.386, width: 13.575, height: 1.308, rx: 0.654, fill: "#fff" })),
        React.createElement("g", { filter: "url(#notice-management-report_svg__k)" },
            React.createElement("rect", { x: 16.662, y: 30.148, width: 13.575, height: 1.308, rx: 0.654, fill: "#fff" })),
        React.createElement("g", { filter: "url(#notice-management-report_svg__l)" },
            React.createElement("rect", { x: 16.662, y: 33.908, width: 6.869, height: 1.308, rx: 0.654, fill: "#fff" })),
        React.createElement("defs", null,
            React.createElement("filter", { id: "notice-management-report_svg__b", x: 11.079, y: 38.077, width: 30.345, height: 13.845, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feGaussianBlur", { stdDeviation: 2.336, result: "effect1_foregroundBlur_2981_73294" })),
            React.createElement("filter", { id: "notice-management-report_svg__f", x: 12.247, y: 14.937, width: 23.224, height: 27.967, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.818, result: "effect1_foregroundBlur_2981_73294" })),
            React.createElement("filter", { id: "notice-management-report_svg__g", x: 11.427, y: 14.446, width: 24.206, height: 28.949, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feGaussianBlur", { in: "BackgroundImageFix", stdDeviation: 1.063 }),
                React.createElement("feComposite", { in2: "SourceAlpha", operator: "in", result: "effect1_backgroundBlur_2981_73294" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_backgroundBlur_2981_73294", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.327 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.245 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.52 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_2981_73294" })),
            React.createElement("filter", { id: "notice-management-report_svg__i", x: 15.681, y: 22.297, width: 15.537, height: 3.271, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.654 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.491 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_2981_73294" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_2981_73294", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.327 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.327 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_2981_73294" })),
            React.createElement("filter", { id: "notice-management-report_svg__j", x: 15.681, y: 26.059, width: 15.537, height: 3.271, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.654 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.491 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_2981_73294" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_2981_73294", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.327 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.327 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_2981_73294" })),
            React.createElement("filter", { id: "notice-management-report_svg__k", x: 15.681, y: 29.82, width: 15.537, height: 3.271, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.654 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.491 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_2981_73294" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_2981_73294", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.327 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.327 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_2981_73294" })),
            React.createElement("filter", { id: "notice-management-report_svg__l", x: 15.681, y: 33.581, width: 8.832, height: 3.271, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.654 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.491 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_2981_73294" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_2981_73294", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.327 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.327 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.286275 0 0 0 0 0.498039 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_2981_73294" })),
            React.createElement("linearGradient", { id: "notice-management-report_svg__a", x1: 27, y1: 0, x2: 27, y2: 54, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#62ADF0" }),
                React.createElement("stop", { offset: 1, stopColor: "#C4C4C4" })),
            React.createElement("linearGradient", { id: "notice-management-report_svg__c", x1: 31.856, y1: 36.198, x2: 31.856, y2: 11.175, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#3255E3" }),
                React.createElement("stop", { offset: 1, stopColor: "#6ABCF2" })),
            React.createElement("linearGradient", { id: "notice-management-report_svg__d", x1: 31.858, y1: 36.198, x2: 31.858, y2: 11.175, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#3255E3" }),
                React.createElement("stop", { offset: 1, stopColor: "#6ABCF2" })),
            React.createElement("linearGradient", { id: "notice-management-report_svg__h", x1: 24.284, y1: 41.269, x2: 24.284, y2: 16.572, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#3255E3" }),
                React.createElement("stop", { offset: 1, stopColor: "#6ABCF2" })))));
};
const ForwardRef = forwardRef(SvgNoticeManagementReport);
export default ForwardRef;
