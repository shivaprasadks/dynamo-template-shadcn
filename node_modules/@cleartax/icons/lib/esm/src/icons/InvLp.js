import { __rest } from "tslib";
import * as React from "react";
import { forwardRef } from "react";
const SvgInvLp = (_a, ref) => {
    var { title, titleId } = _a, props = __rest(_a, ["title", "titleId"]);
    return (React.createElement("svg", Object.assign({ width: "1em", height: "1em", viewBox: "0 0 54 50", fill: "none", xmlns: "http://www.w3.org/2000/svg", focusable: true, ref: ref, "aria-labelledby": titleId }, props),
        title ? React.createElement("title", { id: titleId }, title) : null,
        React.createElement("g", { filter: "url(#inv-lp_svg__a)" },
            React.createElement("ellipse", { cx: 25.477, cy: 37.921, rx: 16.031, ry: 5.71, fill: "#673BE5", fillOpacity: 0.4 })),
        React.createElement("rect", { x: 27.602, y: 0.367, width: 18.886, height: 23.498, rx: 2.416, fill: "url(#inv-lp_svg__b)" }),
        React.createElement("mask", { id: "inv-lp_svg__d", style: {
                maskType: "alpha",
            }, maskUnits: "userSpaceOnUse", x: 27, y: 0, width: 20, height: 24 },
            React.createElement("rect", { x: 27.602, y: 0.367, width: 18.886, height: 23.498, rx: 2.196, fill: "url(#inv-lp_svg__c)" })),
        React.createElement("g", { mask: "url(#inv-lp_svg__d)" },
            React.createElement("g", { filter: "url(#inv-lp_svg__e)" },
                React.createElement("rect", { x: 14.203, y: 7.617, width: 27.012, height: 28.329, rx: 5.271, fill: "#511EBC" })),
            React.createElement("g", { filter: "url(#inv-lp_svg__f)" },
                React.createElement("rect", { x: 30.453, y: 5.859, width: 13.396, height: 1.098, rx: 0.549, fill: "#fff" })),
            React.createElement("g", { filter: "url(#inv-lp_svg__g)" },
                React.createElement("rect", { x: 30.453, y: 9.594, width: 13.396, height: 1.098, rx: 0.549, fill: "#fff" })),
            React.createElement("g", { filter: "url(#inv-lp_svg__h)" },
                React.createElement("rect", { x: 30.453, y: 13.328, width: 13.396, height: 1.098, rx: 0.549, fill: "#fff" })),
            React.createElement("g", { filter: "url(#inv-lp_svg__i)" },
                React.createElement("rect", { x: 30.453, y: 17.063, width: 9.882, height: 1.098, rx: 0.549, fill: "#fff" }))),
        React.createElement("g", { filter: "url(#inv-lp_svg__j)" },
            React.createElement("rect", { x: 9.813, y: 7.75, width: 28.769, height: 30.172, rx: 6.315, fill: "url(#inv-lp_svg__k)" })),
        React.createElement("g", { filter: "url(#inv-lp_svg__l)" },
            React.createElement("path", { stroke: "#fff", strokeWidth: 0.936, strokeLinecap: "round", d: "M30.016 18.247 18.983 29.28" })),
        React.createElement("g", { filter: "url(#inv-lp_svg__m)" },
            React.createElement("path", { d: "M32.263 27.398h-5.146", stroke: "#fff", strokeWidth: 1.871, strokeLinecap: "round" })),
        React.createElement("g", { filter: "url(#inv-lp_svg__n)" },
            React.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M20.59 15.85a.936.936 0 0 0-1.872 0v2.127h-2.126a.936.936 0 1 0 0 1.87h2.126v2.126a.936.936 0 0 0 1.871 0v-2.125h2.127a.936.936 0 0 0 0-1.871h-2.127V15.85Z", fill: "#fff" })),
        React.createElement("defs", null,
            React.createElement("filter", { id: "inv-lp_svg__a", x: -2.414, y: 20.352, width: 55.78, height: 35.139, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feGaussianBlur", { stdDeviation: 5.929, result: "effect1_foregroundBlur_443_232881" })),
            React.createElement("filter", { id: "inv-lp_svg__e", x: 7.615, y: 1.029, width: 40.192, height: 41.505, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feGaussianBlur", { stdDeviation: 3.294, result: "effect1_foregroundBlur_443_232881" })),
            React.createElement("filter", { id: "inv-lp_svg__f", x: 29.632, y: 5.586, width: 15.041, height: 2.744, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.548 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.411 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_232881" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_232881", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.274 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.274 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.450431 0 0 0 0 0.286274 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232881" })),
            React.createElement("filter", { id: "inv-lp_svg__g", x: 29.632, y: 9.32, width: 15.041, height: 2.744, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.548 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.411 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_232881" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_232881", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.274 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.274 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.450431 0 0 0 0 0.286274 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232881" })),
            React.createElement("filter", { id: "inv-lp_svg__h", x: 29.632, y: 13.054, width: 15.041, height: 2.744, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.548 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.411 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_232881" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_232881", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.274 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.274 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.450431 0 0 0 0 0.286274 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232881" })),
            React.createElement("filter", { id: "inv-lp_svg__i", x: 29.632, y: 16.789, width: 11.526, height: 2.744, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.548 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.411 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "out" }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0" }),
                React.createElement("feBlend", { in2: "BackgroundImageFix", result: "effect1_dropShadow_443_232881" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_dropShadow_443_232881", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.274 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.274 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.450431 0 0 0 0 0.286274 0 0 0 0 0.917647 0 0 0 0.46 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232881" })),
            React.createElement("filter", { id: "inv-lp_svg__j", x: 7.856, y: 5.793, width: 32.679, height: 34.085, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feGaussianBlur", { in: "BackgroundImage", stdDeviation: 0.978 }),
                React.createElement("feComposite", { in2: "SourceAlpha", operator: "in", result: "effect1_backgroundBlur_443_232881" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "effect1_backgroundBlur_443_232881", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.468 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.351 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.52 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect2_innerShadow_443_232881" })),
            React.createElement("filter", { id: "inv-lp_svg__l", x: 18.516, y: 17.781, width: 11.969, height: 12.203, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.234 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.234 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.419608 0 0 0 0 0.239216 0 0 0 0 0.8 0 0 0 0.4 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect1_innerShadow_443_232881" })),
            React.createElement("filter", { id: "inv-lp_svg__m", x: 26.18, y: 26.461, width: 7.016, height: 2.109, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.234 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.234 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.419608 0 0 0 0 0.239216 0 0 0 0 0.8 0 0 0 0.4 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect1_innerShadow_443_232881" })),
            React.createElement("filter", { id: "inv-lp_svg__n", x: 15.656, y: 14.914, width: 7.992, height: 8.226, filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB" },
                React.createElement("feFlood", { floodOpacity: 0, result: "BackgroundImageFix" }),
                React.createElement("feBlend", { in: "SourceGraphic", in2: "BackgroundImageFix", result: "shape" }),
                React.createElement("feColorMatrix", { in: "SourceAlpha", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha" }),
                React.createElement("feOffset", { dy: 0.234 }),
                React.createElement("feGaussianBlur", { stdDeviation: 0.234 }),
                React.createElement("feComposite", { in2: "hardAlpha", operator: "arithmetic", k2: -1, k3: 1 }),
                React.createElement("feColorMatrix", { values: "0 0 0 0 0.419608 0 0 0 0 0.239216 0 0 0 0 0.8 0 0 0 0.4 0" }),
                React.createElement("feBlend", { in2: "shape", result: "effect1_innerShadow_443_232881" })),
            React.createElement("linearGradient", { id: "inv-lp_svg__b", x1: 37.045, y1: 23.865, x2: 37.045, y2: 0.367, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#6536C8" }),
                React.createElement("stop", { offset: 1, stopColor: "#A17DEE" })),
            React.createElement("linearGradient", { id: "inv-lp_svg__c", x1: 37.045, y1: 23.865, x2: 37.045, y2: 0.367, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#511EBC" }),
                React.createElement("stop", { offset: 1, stopColor: "#7E49ED" })),
            React.createElement("linearGradient", { id: "inv-lp_svg__k", x1: 24.197, y1: 37.922, x2: 24.197, y2: 7.75, gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { stopColor: "#5721C7", stopOpacity: 0.22 }),
                React.createElement("stop", { offset: 1, stopColor: "#A17DEE", stopOpacity: 0.4 })))));
};
const ForwardRef = forwardRef(SvgInvLp);
export default ForwardRef;
