import { __rest } from "tslib";
import * as React from "react";
import { forwardRef } from "react";
const SvgSupportHeadset = (_a, ref) => {
    var { title, titleId } = _a, props = __rest(_a, ["title", "titleId"]);
    return (React.createElement("svg", Object.assign({ width: "1em", height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", focusable: true, ref: ref, "aria-labelledby": titleId }, props),
        title ? React.createElement("title", { id: titleId }, title) : null,
        React.createElement("g", { clipPath: "url(#support-headset_svg__a)" },
            React.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M6.987 1.5A3.18 3.18 0 0 0 3.75 4.628V9a1 1 0 0 1-1 1H1.5A1.5 1.5 0 0 1 0 8.5v-2A1.5 1.5 0 0 1 1.5 5h.75v-.39A4.68 4.68 0 0 1 7 0a4.68 4.68 0 0 1 4.75 4.61V5h.75A1.5 1.5 0 0 1 14 6.5v2a1.5 1.5 0 0 1-1.5 1.5h-.75v.5a2.75 2.75 0 0 1-2.44 2.733A1.5 1.5 0 0 1 8 14H6.5a1.5 1.5 0 0 1 0-3H8c.542 0 1.017.287 1.28.718a1.25 1.25 0 0 0 .97-1.218V4.627A3.18 3.18 0 0 0 6.987 1.5Z", fill: props.color || "currentColor" })),
        React.createElement("defs", null,
            React.createElement("clipPath", { id: "support-headset_svg__a" },
                React.createElement("path", { fill: "#fff", d: "M0 0h14v14H0z" })))));
};
const ForwardRef = forwardRef(SvgSupportHeadset);
export default ForwardRef;
