import * as __WEBPACK_EXTERNAL_MODULE_react__ from "react";
import * as __WEBPACK_EXTERNAL_MODULE_moment__ from "moment";
import * as __WEBPACK_EXTERNAL_MODULE__components_FilterSidebar_utils_js_e7ff78ac__ from "../components/FilterSidebar/utils.js";
const useMonthFilter = ({ value, onChange })=>{
    const [selectorType, setSelectorType] = (0, __WEBPACK_EXTERNAL_MODULE_react__.useState)('month');
    const initialDate = value ? (0, __WEBPACK_EXTERNAL_MODULE_moment__["default"])(value, 'YYYY-MM').toDate() : new Date();
    const [selectedDate, setSelectedDate] = (0, __WEBPACK_EXTERNAL_MODULE_react__.useState)(initialDate);
    const [yearRange, setYearRange] = (0, __WEBPACK_EXTERNAL_MODULE_react__.useState)((0, __WEBPACK_EXTERNAL_MODULE__components_FilterSidebar_utils_js_e7ff78ac__.getInitialYearRange)());
    const [isOpen, setIsOpen] = (0, __WEBPACK_EXTERNAL_MODULE_react__.useState)(false);
    (0, __WEBPACK_EXTERNAL_MODULE_react__.useEffect)(()=>{
        if (value) {
            const newDateFromValue = (0, __WEBPACK_EXTERNAL_MODULE_moment__["default"])(value, 'YYYY-MM').toDate();
            if (newDateFromValue.getTime() !== selectedDate.getTime()) setSelectedDate(newDateFromValue);
        }
    }, [
        value
    ]);
    const formatDisplayDate = (date)=>(0, __WEBPACK_EXTERNAL_MODULE_moment__["default"])(date).format('MMM YY');
    const displayDate = value ? formatDisplayDate(selectedDate) : 'Select Month';
    const handleMonthSelect = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)((monthIndex)=>{
        const newDate = new Date(selectedDate);
        newDate.setMonth(monthIndex);
        setSelectedDate(newDate);
        onChange((0, __WEBPACK_EXTERNAL_MODULE_moment__["default"])(newDate).format('YYYY-MM'));
        setIsOpen(false);
    }, [
        selectedDate,
        onChange
    ]);
    const handleYearSelect = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)((year)=>{
        const newDate = new Date(selectedDate);
        newDate.setFullYear(year);
        setSelectedDate(newDate);
        setSelectorType('month');
    }, [
        selectedDate
    ]);
    const handlePreviousYearRange = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)(()=>{
        setYearRange((prevRange)=>[
                prevRange[0] - 12,
                prevRange[1] - 12
            ]);
    }, []);
    const handleNextYearRange = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)(()=>{
        const currentYear = new Date().getFullYear();
        setYearRange((prevRange)=>{
            if (prevRange[0] + 12 <= currentYear) return [
                prevRange[0] + 12,
                prevRange[1] + 12
            ];
            return prevRange;
        });
    }, []);
    const handleYearClick = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)(()=>{
        setSelectorType('year');
    }, []);
    const handleSelectedMonthChange = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)((date)=>{
        setSelectedDate(date);
    }, []);
    const handlePopoverOpenChange = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)((open)=>{
        setIsOpen(open);
        if (!open) setSelectorType('month');
    }, []);
    return {
        isOpen,
        selectedDate,
        selectorType,
        yearRange,
        displayDate,
        handlePopoverOpenChange,
        handleMonthSelect,
        handleYearSelect,
        handlePreviousYearRange,
        handleNextYearRange,
        handleYearClick,
        handleSelectedMonthChange
    };
};
export { useMonthFilter };
