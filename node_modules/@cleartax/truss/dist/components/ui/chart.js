'use client';
import * as __WEBPACK_EXTERNAL_MODULE_react__ from "react";
import * as __WEBPACK_EXTERNAL_MODULE_recharts__ from "recharts";
import * as __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__ from "../../lib/utils.js";
const THEMES = {
    light: '',
    dark: '.dark'
};
const ChartContext = /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createContext(null);
function useChart() {
    const context = __WEBPACK_EXTERNAL_MODULE_react__.useContext(ChartContext);
    if (!context) throw new Error('useChart must be used within a <ChartContainer />');
    return context;
}
const ChartContainer = /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.forwardRef(({ id, className, children, config, ...props }, ref)=>{
    const uniqueId = __WEBPACK_EXTERNAL_MODULE_react__.useId();
    const chartId = `chart-${id || uniqueId.replace(/:/g, '')}`;
    return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(ChartContext.Provider, {
        value: {
            config
        }
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
        "data-chart": chartId,
        ref: ref,
        className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)("flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none", className),
        ...props
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(ChartStyle, {
        id: chartId,
        config: config
    }), /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(__WEBPACK_EXTERNAL_MODULE_recharts__.ResponsiveContainer, null, children)));
});
ChartContainer.displayName = 'Chart';
const ChartStyle = ({ id, config })=>{
    const colorConfig = Object.entries(config).filter(([_, config])=>config.theme || config.color);
    if (!colorConfig.length) return null;
    return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("style", {
        dangerouslySetInnerHTML: {
            __html: Object.entries(THEMES).map(([theme, prefix])=>`
${prefix} [data-chart=${id}] {
${colorConfig.map(([key, itemConfig])=>{
                    const color = itemConfig.theme?.[theme] || itemConfig.color;
                    return color ? `  --color-${key}: ${color};` : null;
                }).join('\n')}
}
`).join('\n')
        }
    });
};
const ChartTooltip = __WEBPACK_EXTERNAL_MODULE_recharts__.Tooltip;
const ChartTooltipContent = /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.forwardRef(({ active, payload, className, indicator = 'dot', hideLabel = false, hideIndicator = false, label, labelFormatter, labelClassName, formatter, color, nameKey, labelKey }, ref)=>{
    const { config } = useChart();
    const tooltipLabel = __WEBPACK_EXTERNAL_MODULE_react__.useMemo(()=>{
        if (hideLabel || !payload?.length) return null;
        const [item] = payload;
        const key = `${labelKey || item.dataKey || item.name || 'value'}`;
        const itemConfig = getPayloadConfigFromPayload(config, item, key);
        const value = labelKey || 'string' != typeof label ? itemConfig?.label : config[label]?.label || label;
        if (labelFormatter) return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
            className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)('font-medium', labelClassName)
        }, labelFormatter(value, payload));
        if (!value) return null;
        return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
            className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)('font-medium', labelClassName)
        }, value);
    }, [
        label,
        labelFormatter,
        payload,
        hideLabel,
        labelClassName,
        config,
        labelKey
    ]);
    if (!active || !payload?.length) return null;
    const nestLabel = 1 === payload.length && 'dot' !== indicator;
    return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
        ref: ref,
        className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)('grid min-w-[8rem] items-start gap-1.5 rounded-lg border border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl', className)
    }, nestLabel ? null : tooltipLabel, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
        className: "grid gap-1.5"
    }, payload.map((item, index)=>{
        const key = `${nameKey || item.name || item.dataKey || 'value'}`;
        const itemConfig = getPayloadConfigFromPayload(config, item, key);
        const indicatorColor = color || item.payload.fill || item.color;
        return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
            key: item.dataKey,
            className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)('flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground', 'dot' === indicator && 'items-center')
        }, formatter && item?.value !== void 0 && item.name ? formatter(item.value, item.name, item, index, item.payload) : /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(__WEBPACK_EXTERNAL_MODULE_react__.Fragment, null, itemConfig?.icon ? /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(itemConfig.icon, null) : !hideIndicator && /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
            className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)('shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]', {
                'h-2.5 w-2.5': 'dot' === indicator,
                'w-1': 'line' === indicator,
                'w-0 border-[1.5px] border-dashed bg-transparent': 'dashed' === indicator,
                'my-0.5': nestLabel && 'dashed' === indicator
            }),
            style: {
                '--color-bg': indicatorColor,
                '--color-border': indicatorColor
            }
        }), /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
            className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)('flex flex-1 justify-between leading-none', nestLabel ? 'items-end' : 'items-center')
        }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
            className: "grid gap-1.5"
        }, nestLabel ? tooltipLabel : null, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("span", {
            className: "text-muted-foreground"
        }, itemConfig?.label || item.name)), item.value && /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("span", {
            className: "font-mono font-medium tabular-nums text-foreground"
        }, item.value.toLocaleString()))));
    })));
});
ChartTooltipContent.displayName = 'ChartTooltip';
const ChartLegend = __WEBPACK_EXTERNAL_MODULE_recharts__.Legend;
const ChartLegendContent = /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.forwardRef(({ className, hideIcon = false, payload, verticalAlign = 'bottom', nameKey }, ref)=>{
    const { config } = useChart();
    if (!payload?.length) return null;
    return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
        ref: ref,
        className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)('flex items-center justify-center gap-4', 'top' === verticalAlign ? 'pb-3' : 'pt-3', className)
    }, payload.map((item)=>{
        const key = `${nameKey || item.dataKey || 'value'}`;
        const itemConfig = getPayloadConfigFromPayload(config, item, key);
        return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
            key: item.value,
            className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)('flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground')
        }, itemConfig?.icon && !hideIcon ? /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(itemConfig.icon, null) : /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
            className: "h-2 w-2 shrink-0 rounded-[2px]",
            style: {
                backgroundColor: item.color
            }
        }), itemConfig?.label);
    }));
});
ChartLegendContent.displayName = 'ChartLegend';
function getPayloadConfigFromPayload(config, payload, key) {
    if ('object' != typeof payload || null === payload) return;
    const payloadPayload = 'payload' in payload && 'object' == typeof payload.payload && null !== payload.payload ? payload.payload : void 0;
    let configLabelKey = key;
    if (key in payload && 'string' == typeof payload[key]) configLabelKey = payload[key];
    else if (payloadPayload && key in payloadPayload && 'string' == typeof payloadPayload[key]) configLabelKey = payloadPayload[key];
    return configLabelKey in config ? config[configLabelKey] : config[key];
}
export { ChartContainer, ChartLegend, ChartLegendContent, ChartStyle, ChartTooltip, ChartTooltipContent };
