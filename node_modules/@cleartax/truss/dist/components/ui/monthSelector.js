import * as __WEBPACK_EXTERNAL_MODULE_lucide_react_f128bbbb__ from "lucide-react";
import * as __WEBPACK_EXTERNAL_MODULE_react__ from "react";
import * as __WEBPACK_EXTERNAL_MODULE__button_js_821b8d9d__ from "./button.js";
import * as __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__ from "../../lib/utils.js";
import * as __WEBPACK_EXTERNAL_MODULE__common_constants_js_8e40523c__ from "../../common/constants.js";
function MonthSelector({ selectedMonth, onMonthSelect, onYearClick, style = {}, onSelectedMonthChange }) {
    const year = selectedMonth.getFullYear();
    const currentDate = new Date();
    const currentYear = currentDate.getFullYear();
    const currentMonth = currentDate.getMonth();
    const handlePrevYearClick = __WEBPACK_EXTERNAL_MODULE_react__.useCallback(()=>{
        const newDate = new Date(selectedMonth);
        newDate.setFullYear(year - 1);
        onSelectedMonthChange(newDate);
    }, [
        selectedMonth,
        year,
        onSelectedMonthChange
    ]);
    const handleNextYearClick = __WEBPACK_EXTERNAL_MODULE_react__.useCallback(()=>{
        if (year < currentYear) {
            const newDate = new Date(selectedMonth);
            newDate.setFullYear(year + 1);
            onSelectedMonthChange(newDate);
        }
    }, [
        selectedMonth,
        year,
        currentYear,
        onSelectedMonthChange
    ]);
    const handleMonthClick = __WEBPACK_EXTERNAL_MODULE_react__.useCallback((index)=>{
        const isFutureMonth = year > currentYear || year === currentYear && index > currentMonth;
        if (!isFutureMonth) onMonthSelect(index);
    }, [
        year,
        currentYear,
        currentMonth,
        onMonthSelect
    ]);
    return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
        className: "p-2",
        style: style
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
        className: "flex justify-center relative items-center"
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(__WEBPACK_EXTERNAL_MODULE__button_js_821b8d9d__.Button, {
        variant: "outline",
        className: "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 mr-2",
        onClick: ()=>{
            handlePrevYearClick();
        },
        "aria-label": "Previous year"
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(__WEBPACK_EXTERNAL_MODULE_lucide_react_f128bbbb__.ChevronLeft, {
        className: "h-4 w-4"
    })), /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
        className: "text-sm font-medium cursor-pointer text-center mx-auto hover:text-gray-800 hover:bg-gray-100 px-2 py-1 rounded transition-colors",
        onClick: onYearClick
    }, year), /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(__WEBPACK_EXTERNAL_MODULE__button_js_821b8d9d__.Button, {
        variant: "outline",
        className: "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 ml-2",
        onClick: ()=>{
            handleNextYearClick();
        },
        disabled: year >= currentYear,
        "aria-label": "Next year"
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(__WEBPACK_EXTERNAL_MODULE_lucide_react_f128bbbb__.ChevronRight, {
        className: "h-4 w-4"
    }))), /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("div", {
        className: "mt-3 grid grid-cols-3"
    }, __WEBPACK_EXTERNAL_MODULE__common_constants_js_8e40523c__.MONTHS.map((month, index)=>{
        const isFutureMonth = year > currentYear || year === currentYear && index > currentMonth;
        return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement(__WEBPACK_EXTERNAL_MODULE__button_js_821b8d9d__.Button, {
            key: month,
            variant: "ghost",
            className: (0, __WEBPACK_EXTERNAL_MODULE__lib_utils_js_c09d30d7__.cn)('h-8 w-full justify-center transition-colors text-xs', selectedMonth.getMonth() === index && 'bg-primary/80 text-primary-foreground hover:bg-primary/80 hover:text-primary-foreground', selectedMonth.getMonth() !== index && !isFutureMonth && 'hover:bg-accent hover:text-accent-foreground hover:scale-105', isFutureMonth && 'opacity-40 cursor-not-allowed'),
            onClick: ()=>{
                handleMonthClick(index);
            },
            disabled: isFutureMonth
        }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__.createElement("span", {
            className: "px-0.5"
        }, month));
    })));
}
MonthSelector.displayName = 'MonthSelector';
export { MonthSelector };
