import { FilterTypes, FilterStateType, SubCategoriesList } from './types';
interface FilterState {
    filters: FilterStateType;
    columnSearch: string;
    setFilter: (identifier: string, type: FilterTypes, value: any, fieldName?: string) => void;
    setSearchValue: (identifier: string, value: string, fieldName?: string) => void;
    setCheckboxValues: (identifier: string, values: string[], fieldName?: string) => void;
    setRadioValue: (identifier: string, value: string, fieldName?: string) => void;
    setDateRangeValues: (identifier: string, min: string, max: string, fieldName?: string) => void;
    setMonthRangeValues: (identifier: string, min: string, max: string, fieldName?: string) => void;
    setDateValue: (identifier: string, value: string, fieldName?: string) => void;
    setMonthValue: (identifier: string, value: string, fieldName?: string) => void;
    setSliderValues: (identifier: string, min: number, max: number, fieldName?: string) => void;
    setCatagories: (identifier: string, catagories: SubCategoriesList) => void;
    setColumnSearch: (value: string) => void;
    getFilters: () => Record<string, any>;
    resetFilters: () => void;
    resetFilter: (identifier: string) => void;
}
export declare const useFilterStore: import("zustand").UseBoundStore<import("zustand").StoreApi<FilterState>>;
export {};
