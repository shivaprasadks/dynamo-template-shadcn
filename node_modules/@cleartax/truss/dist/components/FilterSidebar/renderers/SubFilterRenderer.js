import * as __WEBPACK_EXTERNAL_MODULE_react__ from "react";
import * as __WEBPACK_EXTERNAL_MODULE__store_js_add3cf67__ from "../store.js";
import * as __WEBPACK_EXTERNAL_MODULE__ui_accordion_js_7c60a3dd__ from "../../ui/accordion.js";
import * as __WEBPACK_EXTERNAL_MODULE__ui_checkbox_js_fbbac507__ from "../../ui/checkbox.js";
import * as __WEBPACK_EXTERNAL_MODULE__ui_label_js_64ca4bc7__ from "../../ui/label.js";
const SubFilterRenderer = ({ catagories = [], parentIdentifier })=>{
    const { filters, setCatagories } = (0, __WEBPACK_EXTERNAL_MODULE__store_js_add3cf67__.useFilterStore)();
    const [openItem, setOpenItem] = (0, __WEBPACK_EXTERNAL_MODULE_react__.useState)('select-columns');
    const parentFilter = filters[parentIdentifier];
    const selectedSubCategories = parentFilter?.catagories?.map((cat)=>cat.identifier) || [];
    (0, __WEBPACK_EXTERNAL_MODULE_react__.useEffect)(()=>{
        const cats = catagories;
        if (cats.length > 0 && (!parentFilter?.catagories || 0 === parentFilter.catagories.length)) {
            const initialCategories = cats.map((category)=>({
                    identifier: category.identifier,
                    label: category.label
                }));
            setCatagories(parentIdentifier, initialCategories);
        }
    }, [
        catagories,
        parentIdentifier,
        parentFilter,
        setCatagories
    ]);
    const handleCategoryChange = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)((identifier, label, checked)=>{
        const currentCatagories = parentFilter?.catagories || [];
        let newCatagories;
        if (checked) {
            if (selectedSubCategories.includes(identifier)) return;
            newCatagories = [
                ...currentCatagories,
                {
                    identifier,
                    label
                }
            ];
        } else newCatagories = currentCatagories.filter((cat)=>cat.identifier !== identifier);
        setCatagories(parentIdentifier, newCatagories);
    }, [
        parentFilter,
        selectedSubCategories,
        setCatagories,
        parentIdentifier
    ]);
    const handleValueChange = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)((value)=>{
        setOpenItem(value);
    }, [
        setOpenItem
    ]);
    const handleCheckboxChange = (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)((identifier, label, checked)=>{
        handleCategoryChange(identifier, label, checked);
    }, [
        handleCategoryChange
    ]);
    return /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement(__WEBPACK_EXTERNAL_MODULE__ui_accordion_js_7c60a3dd__.Accordion, {
        type: "single",
        collapsible: true,
        value: openItem,
        onValueChange: handleValueChange,
        className: "overflow-hidden relative w-sidebar border-t-0 border-b"
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement(__WEBPACK_EXTERNAL_MODULE__ui_accordion_js_7c60a3dd__.AccordionItem, {
        value: "select-columns",
        className: "!border-0 w-sidebar"
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement(__WEBPACK_EXTERNAL_MODULE__ui_accordion_js_7c60a3dd__.AccordionTrigger, {
        className: "flex justify-between items-center p-3 cursor-pointer w-sidebar no-underline hover:no-underline [&>svg]:text-primary [&>svg]:text-filter-icon [&>svg]:transition-transform [&>svg]:duration-300 [&[data-state=open]>svg]:rotate-180"
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement("div", {
        className: "flex items-center flex-1"
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement("h4", {
        className: "text-sm font-medium text-filter-heading m-0 flex items-center"
    }, "Select Columns"))), /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement(__WEBPACK_EXTERNAL_MODULE__ui_accordion_js_7c60a3dd__.AccordionContent, {
        className: "p-3 w-sidebar"
    }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement("div", {
        className: "flex flex-col gap-2 max-h-200 overflow-y-auto w-sidebar"
    }, catagories.map((category)=>/*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement("div", {
            key: category.identifier,
            className: "flex flex-row items-center gap-2 w-sidebar"
        }, /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement(__WEBPACK_EXTERNAL_MODULE__ui_checkbox_js_fbbac507__.Checkbox, {
            id: `column-${category.identifier}`,
            checked: selectedSubCategories.includes(category.identifier),
            onCheckedChange: (checked)=>handleCheckboxChange(category.identifier, category.label, checked)
        }), /*#__PURE__*/ __WEBPACK_EXTERNAL_MODULE_react__["default"].createElement(__WEBPACK_EXTERNAL_MODULE__ui_label_js_64ca4bc7__.Label, {
            htmlFor: `column-${category.identifier}`,
            className: "flex items-center text-sm text-filter-heading cursor-pointer ml-2"
        }, category.label)))))));
};
const SubFilterRenderer_rslib_entry_ = SubFilterRenderer;
export { SubFilterRenderer_rslib_entry_ as default };
