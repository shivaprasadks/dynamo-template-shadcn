import * as __WEBPACK_EXTERNAL_MODULE_zustand__ from "zustand";
import * as __WEBPACK_EXTERNAL_MODULE__types_js_8472748c__ from "../types.js";
const applyFilterLogic = (state, value)=>{
    const { identifier = '', filterValue = '', min = '', max = '', catagories = [], filterValueList = [], startDate = '', endDate = '', filterType = '', format = '', operationType = '' } = value;
    const newFilterObject = {};
    if (filterValue) newFilterObject.value = filterValue;
    if ('' !== min) newFilterObject.min = 'number' == typeof min ? min : parseInt(String(min), 10) || 0;
    if ('' !== max) newFilterObject.max = 'number' == typeof max ? max : parseInt(String(max), 10) || 0;
    if (startDate) newFilterObject.min = startDate;
    if (endDate) newFilterObject.max = endDate;
    if (filterValueList.length) newFilterObject.values = filterValueList;
    if (filterType) newFilterObject.filterType = filterType;
    if (format) newFilterObject.format = format;
    if (value.source) newFilterObject.source = value.source;
    if (catagories?.length) newFilterObject.catagories = catagories;
    return {
        ...state,
        [identifier]: newFilterObject
    };
};
const removeFilterLogic = (state, value)=>{
    const { identifier = '' } = value;
    const newState = {
        ...state
    };
    if (identifier && newState[identifier]) delete newState[identifier];
    return newState;
};
const useFilterStore = (0, __WEBPACK_EXTERNAL_MODULE_zustand__.create)((set, get)=>({
        filterState: {},
        appliedFilterState: {},
        visibility: __WEBPACK_EXTERNAL_MODULE__types_js_8472748c__.DrawerStates.Closed,
        showAppliedFilters: false,
        variant: null,
        initialState: {},
        initialize: (initialState, variant)=>{
            set({
                initialState: {
                    ...initialState
                },
                variant: variant,
                filterState: {
                    ...initialState
                },
                appliedFilterState: {
                    ...initialState
                },
                visibility: __WEBPACK_EXTERNAL_MODULE__types_js_8472748c__.DrawerStates.Closed,
                showAppliedFilters: false
            });
        },
        applyFilter: (value)=>{
            set((state)=>{
                const newFilterState = applyFilterLogic(state.filterState, value);
                if (state.variant === __WEBPACK_EXTERNAL_MODULE__types_js_8472748c__.SideBarFilterVariants.NO_APPLY_BUTTON) return {
                    filterState: newFilterState,
                    appliedFilterState: newFilterState
                };
                return {
                    filterState: newFilterState
                };
            });
        },
        removeFilter: (value)=>{
            set((state)=>{
                const newFilterState = removeFilterLogic(state.filterState, value);
                if (state.variant !== __WEBPACK_EXTERNAL_MODULE__types_js_8472748c__.SideBarFilterVariants.NO_APPLY_BUTTON) return {
                    filterState: newFilterState
                };
                {
                    const newAppliedState = removeFilterLogic(state.appliedFilterState, value);
                    return {
                        filterState: newFilterState,
                        appliedFilterState: newAppliedState
                    };
                }
            });
        },
        resetFilters: ()=>{
            set((state)=>{
                const resetState = {
                    ...state.initialState
                };
                if (state.variant === __WEBPACK_EXTERNAL_MODULE__types_js_8472748c__.SideBarFilterVariants.NO_APPLY_BUTTON) return {
                    filterState: resetState,
                    appliedFilterState: resetState
                };
                return {
                    filterState: resetState
                };
            });
        },
        applyPendingFilters: ()=>{
            set((state)=>{
                if (state.variant === __WEBPACK_EXTERNAL_MODULE__types_js_8472748c__.SideBarFilterVariants.APPLY_BUTTON) return {
                    appliedFilterState: {
                        ...state.filterState
                    }
                };
                return {};
            });
        },
        openFilterSidebar: ()=>set({
                visibility: __WEBPACK_EXTERNAL_MODULE__types_js_8472748c__.DrawerStates.Open
            }),
        closeFilterSidebar: ()=>set({
                visibility: __WEBPACK_EXTERNAL_MODULE__types_js_8472748c__.DrawerStates.Closed
            }),
        toggleShowAppliedFilters: ()=>set((state)=>({
                    showAppliedFilters: !state.showAppliedFilters
                }))
    }));
const store_rslib_entry_ = useFilterStore;
export { store_rslib_entry_ as default, useFilterStore };
